"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const AuthMiddleware_1 = __importDefault(require("../middlewares/AuthMiddleware"));
const AuthController_1 = __importDefault(require("../controllers/AuthController"));
const TemplateController_1 = __importDefault(require("../controllers/TemplateController"));
const TagController_1 = __importDefault(require("../controllers/TagController"));
const router = express_1.default.Router();
const authController = new AuthController_1.default();
const templateController = new TemplateController_1.default();
const tagController = new TagController_1.default();
const authMiddleware = new AuthMiddleware_1.default();
router.post('/auth/register', authController.register);
router.post('/auth/login', authController.login);
router.post('/auth/refresh-token', authController.refreshToken);
router.get('/templates/top', templateController.getTopTemplates);
router.get('/templates/latest', templateController.getLatestTemplates);
router.get('/templates/:templateId', templateController.getTemplateById);
router.get('/templates/profile/:userId', authMiddleware.authenticate, templateController.getProfile);
router.get('/forms/:templateId', authMiddleware.authenticate, authMiddleware.isAuthor, templateController.getForms);
router.post('/templates/create', authMiddleware.authenticate, templateController.createTemplate);
router.post('/forms/check/:templateId', authMiddleware.authenticate, templateController.hasUserSubmittedForm);
router.get('/tags', tagController.getTags);
router.get('/tags/search', authMiddleware.authenticate, tagController.searchTags);
router.post('/forms/submit/:templateId', authMiddleware.authenticate, templateController.createForm);
router.get('/forms/:templateId/responses/:formId', authMiddleware.authenticate, authMiddleware.isAuthor, templateController.getForm);
router.post('/comments/create/:templateId', authMiddleware.authenticate, templateController.createComment);
// router.post('/templates/like/:templateId', authMiddleware, TemplateController.likeTemplate);
// router.post('/templates/unlike/:templateId', authMiddleware, TemplateController.unlikeTemplate);
exports.default = router;
